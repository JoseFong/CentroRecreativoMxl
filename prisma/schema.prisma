// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String
  password String
}

model Docente {
  id       Int      @id @default(autoincrement())
  nombre   String
  aPaterno String
  aMaterno String?
  telefono String
  fechaNac String
  curp     String   @unique
  correo   String
  Grupo    Grupo[]
  Salida   Salida[]
}

model Alumno {
  id             Int         @id @default(autoincrement())
  nombre         String
  aPaterno       String
  aMaterno       String?
  genero         String
  fechaNac       String
  telefono       String
  telefonoAlumno String?
  direccion      String
  curp           String      @unique
  AlumnoNEE      AlumnoNEE[]
  grupo          Grupo?      @relation(fields: [grupoId], references: [id])
  grupoId        Int?
  Pago           Pago[]
}

model Neurodivergencia {
  id        Int         @id @default(autoincrement())
  nombre    String
  AlumnoNEE AlumnoNEE[]
}

model AlumnoNEE {
  id                 Int              @id @default(autoincrement())
  alumno             Alumno           @relation(fields: [alumnoId], references: [id])
  alumnoId           Int
  neurodivergencia   Neurodivergencia @relation(fields: [neurodivergenciaId], references: [id])
  neurodivergenciaId Int
}

model Grupo {
  id             Int              @id @default(autoincrement())
  nombre         String
  alumnos        Alumno[]
  docente        Docente?         @relation(fields: [docenteId], references: [id])
  docenteId      Int?
  Salida         Salida[]
  GrupoActividad GrupoActividad[]
}

model Actividad {
  id             Int              @id @default(autoincrement())
  nombre         String
  descripcion    String
  GrupoActividad GrupoActividad[]
}

model GrupoActividad {
  id          Int       @id @default(autoincrement())
  grupo       Grupo     @relation(fields: [grupoId], references: [id])
  actividad   Actividad @relation(fields: [actividadId], references: [id])
  horario     String
  grupoId     Int
  actividadId Int
}

model Salida {
  id           Int      @id @default(autoincrement())
  nombre       String
  fecha        String
  docente      Docente? @relation(fields: [docenteId], references: [id])
  docenteId    Int?
  grupo        Grupo    @relation(fields: [grupoId], references: [id])
  grupoId      Int
  horaDeSalida String
}

model Pago {
  id          Int     @id @default(autoincrement())
  cantidad    Float
  folio       String
  fecha       String
  categoria   String // inscripci√≥n, material, mensualidad u otro
  descripcion String? // solo si se selecciona otro
  alumno      Alumno  @relation(fields: [alumnoId], references: [id])
  alumnoId    Int
  mes         String? // solo si selecciona mensualidad
  materiales  String? // solo si selecciona materiales
}

model Gasto {
  id       Int    @id @default(autoincrement())
  cantidad Float
  concepto String
  fecha    String
}
